---
// Cookie Banner Component
---

<div id="cookie-banner" class="fixed bottom-0 left-0 right-0 bg-gradient-to-r from-amber-600 to-orange-500 text-white p-4 shadow-2xl z-50 transform translate-y-full transition-transform duration-300 ease-in-out">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
      <div class="flex-1">
        <h3 class="text-lg font-semibold mb-2">üç™ We use cookies</h3>
        <p class="text-sm text-amber-100">
          We use cookies to enhance your browsing experience, serve personalized content, and analyze our traffic. 
          By clicking "Accept All", you consent to our use of cookies. 
          <a href="/privacy" class="underline hover:text-white transition-colors">Learn more</a>
        </p>
      </div>
      <div class="flex flex-col sm:flex-row gap-3">
        <button 
          id="cookie-accept-necessary" 
          class="px-4 py-2 bg-white text-amber-900 rounded-full font-semibold text-sm hover:bg-amber-100 transition-colors"
        >
          Necessary Only
        </button>
        <button 
          id="cookie-accept-all" 
          class="px-6 py-2 bg-amber-800 text-white rounded-full font-semibold text-sm hover:bg-amber-700 transition-colors"
        >
          Accept All
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Cookie consent management
  class CookieConsent {
    constructor() {
      this.banner = document.getElementById('cookie-banner');
      this.acceptAllBtn = document.getElementById('cookie-accept-all');
      this.acceptNecessaryBtn = document.getElementById('cookie-accept-necessary');
      
      this.init();
    }

    init() {
      // Check if user has already made a choice
      const consent = this.getCookieConsent();
      
      if (consent === null) {
        // Show banner if no choice has been made
        this.showBanner();
      } else {
        // Apply the stored consent
        this.applyConsent(consent);
      }

      // Add event listeners
      this.acceptAllBtn?.addEventListener('click', () => this.acceptAll());
      this.acceptNecessaryBtn?.addEventListener('click', () => this.acceptNecessary());
    }

    showBanner() {
      if (this.banner) {
        this.banner.classList.remove('translate-y-full');
        this.banner.classList.add('translate-y-0');
      }
    }

    hideBanner() {
      if (this.banner) {
        this.banner.classList.add('translate-y-full');
        this.banner.classList.remove('translate-y-0');
      }
    }

    acceptAll() {
      const consent = {
        necessary: true,
        analytics: true,
        marketing: true,
        timestamp: new Date().toISOString()
      };
      
      this.setCookieConsent(consent);
      this.applyConsent(consent);
      this.hideBanner();
    }

    acceptNecessary() {
      const consent = {
        necessary: true,
        analytics: false,
        marketing: false,
        timestamp: new Date().toISOString()
      };
      
      this.setCookieConsent(consent);
      this.applyConsent(consent);
      this.hideBanner();
    }

    applyConsent(consent) {
      // Apply analytics consent
      if (consent.analytics) {
        this.enableAnalytics();
      } else {
        this.disableAnalytics();
      }

      // Apply marketing consent
      if (consent.marketing) {
        this.enableMarketing();
      } else {
        this.disableMarketing();
      }
    }

    enableAnalytics() {
      // Add Google Analytics or other analytics code here
      console.log('Analytics enabled');
      // Example: gtag('consent', 'update', { 'analytics_storage': 'granted' });
    }

    disableAnalytics() {
      // Disable analytics
      console.log('Analytics disabled');
      // Example: gtag('consent', 'update', { 'analytics_storage': 'denied' });
    }

    enableMarketing() {
      // Enable marketing cookies
      console.log('Marketing enabled');
    }

    disableMarketing() {
      // Disable marketing cookies
      console.log('Marketing disabled');
    }

    setCookieConsent(consent) {
      const expires = new Date();
      expires.setFullYear(expires.getFullYear() + 1); // 1 year expiry
      
      document.cookie = `cookieConsent=${JSON.stringify(consent)}; expires=${expires.toUTCString()}; path=/; SameSite=Lax`;
    }

    getCookieConsent() {
      const cookies = document.cookie.split(';');
      const consentCookie = cookies.find(cookie => cookie.trim().startsWith('cookieConsent='));
      
      if (consentCookie) {
        try {
          const consentData = consentCookie.split('=')[1];
          return JSON.parse(decodeURIComponent(consentData));
        } catch (error) {
          console.error('Error parsing cookie consent:', error);
          return null;
        }
      }
      
      return null;
    }
  }

  // Initialize cookie consent when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new CookieConsent();
  });
</script>

<style>
  #cookie-banner {
    backdrop-filter: blur(10px);
  }
  
  #cookie-banner a {
    text-decoration: underline;
  }
  
  #cookie-banner a:hover {
    text-decoration: none;
  }
</style>

